let fruits = ['–Ø–±–ª–æ–∫–æ', '–ë–∞–Ω–∞–Ω', '–ê–ø–µ–ª—å—Å–∏–Ω']
// –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –∫–æ–Ω—Ü–µ —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
fruits.push('–ì—Ä—É—à–∞')
console.log(fruits)


// —É–¥–∞–ª—è–µ—Ç –≤ –∫–æ–Ω—Ü–µ —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
fruits.pop()
console.log(fruits)

// —É–¥–∞–ª—è–µ—Ç –≤ –Ω–∞—á–∞–ª–µ —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
fruits.shift()
console.log(fruits)

// –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –Ω–∞—á–∞–ª–µ —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
fruits.unshift('–Ø–±–ª–æ–∫–æ')
console.log(fruits)

// –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –¥–≤–∞ –∏–ª–∏ –±–æ–ª–µ–µ –º–∞—Å—Å–∏–≤–æ–≤ –≤ –æ–¥–∏–Ω –∏ —Å–æ–∑–¥–∞–µ—Ç –≤ –Ω–æ–≤—ã–π
let vegetables = ['–û–≥—É—Ä–µ—Ü', '–ü–æ–º–∏–¥–æ—Ä', '–†–µ–ø–∫–∞']
 let items = fruits.concat(vegetables)
console.log(items)


// –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –≤ —Å—Ç—Ä–æ–∫—É
let fruitsJoin = fruits.join(', ')
console.log(fruitsJoin)

// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —ç–ª–µ–º–µ–Ω—Ç—ã –æ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –¥–æ –¥—Ä—É–≥–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞
let selectedFruits = fruits.slice(0, 2)
console.log(selectedFruits)


console.log(fruits)
// –∏–∑–º–µ–Ω—è–µ—Ç –º–∞—Å—Å–∏–≤ —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —ç–ª–µ–º–µ–Ω—Ç—ã –æ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –¥–æ –¥—Ä—É–≥–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞
fruits.splice(0, 1, '–ö–∏–≤–∏', '–ú–∞–Ω–≥–æ')
console.log(fruits)




























// –ú–∞—Å—Å–∏–≤ (array) ‚Äî —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π –≤ –æ–¥–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.

let fruits = ["üçé", "üçå", "üçá", "üçä"];
console.log(fruits); // ["üçé", "üçå", "üçá", "üçä"]
console.log(fruits[0]); // üçé


// –û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –º–∞—Å—Å–∏–≤–∞–º–∏
// 1Ô∏è‚É£ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
// .push() ‚Äì –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –∫–æ–Ω–µ—Ü
// .unshift() ‚Äì –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –Ω–∞—á–∞–ª–æ

fruits.push("üçç"); // ["üçé", "üçå", "üçá", "üçä", "üçç"]
fruits.unshift("ü•ù"); // ["ü•ù", "üçé", "üçå", "üçá", "üçä", "üçç"]


// 2Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
// .pop() ‚Äì —É–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç
// .shift() ‚Äì —É–¥–∞–ª—è–µ—Ç –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç

fruits.pop(); // –£–¥–∞–ª–∏—Ç "üçç"
fruits.shift(); // –£–¥–∞–ª–∏—Ç "ü•ù"


// 3Ô∏è‚É£ –î–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞
// .length ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤

console.log(fruits.length); // 4


// 4Ô∏è‚É£ –¶–∏–∫–ª—ã –ø–æ –º–∞—Å—Å–∏–≤—É
// for / forEach

fruits.forEach(fruit => console.log(fruit));

// for...of


for (let fruit of fruits) {
    console.log(fruit);
}

// 5Ô∏è‚É£ –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
// .indexOf(), .includes()
// .find(), .filter()


console.log(fruits.indexOf("üçá")); // 2
console.log(fruits.includes("üçå")); // true

// 6Ô∏è‚É£ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
// .sort(), .reverse()

let numbers = [5, 1, 8, 3];
numbers.sort(); // [1, 3, 5, 8]
numbers.reverse(); // [8, 5, 3, 1]








// 1Ô∏è‚É£ –ß—Ç–æ —Ç–∞–∫–æ–µ –º–∞—Å—Å–∏–≤?
// –ú–∞—Å—Å–∏–≤ ‚Äî —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π –≤ –æ–¥–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.

// –ü—Ä–∏–º–µ—Ä:

let numbers = [10, 20, 30, 40];

// üìå –í–∞–∂–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –º–∞—Å—Å–∏–≤–æ–≤ –≤ JavaScript:

// –û–Ω–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ (–¥–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞ –Ω–µ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏).
// –í –º–∞—Å—Å–∏–≤–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö (—á–∏—Å–ª–∞, —Å—Ç—Ä–æ–∫–∏, –æ–±—ä–µ–∫—Ç—ã –∏ —Ç. –¥.).
// –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0.





// 2Ô∏è‚É£ –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è
// –î–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞ (length) ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ.
// –≠–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ ‚Äì –æ–¥–Ω–æ –∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π –º–∞—Å—Å–∏–≤–∞.
// –ò–Ω–¥–µ–∫—Å ‚Äì –Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0).
// –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏:

let fruits = ["–Ø–±–ª–æ–∫–æ", "–ë–∞–Ω–∞–Ω", "–ê–ø–µ–ª—å—Å–∏–Ω"];
console.log(fruits[0]); // –í—ã–≤–µ–¥–µ—Ç "–Ø–±–ª–æ–∫–æ"
console.log(fruits[1]); // –í—ã–≤–µ–¥–µ—Ç "–ë–∞–Ω–∞–Ω"





// 3Ô∏è‚É£ –ö–∞–∫ –∏–∑–º–µ–Ω—è—Ç—å –º–∞—Å—Å–∏–≤—ã?
// –ú–∞—Å—Å–∏–≤ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏, –¥–æ–±–∞–≤–ª—è—è –∏–ª–∏ —É–¥–∞–ª—è—è —ç–ª–µ–º–µ–Ω—Ç—ã.
// üîπ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω–µ—Ü (push):

fruits.push("–ì—Ä—É—à–∞");
console.log(fruits); // ["–Ø–±–ª–æ–∫–æ", "–ë–∞–Ω–∞–Ω", "–ê–ø–µ–ª—å—Å–∏–Ω", "–ì—Ä—É—à–∞"]

// üîπ –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∫–æ–Ω—Ü–∞ (pop):

fruits.pop();
console.log(fruits); // ["–Ø–±–ª–æ–∫–æ", "–ë–∞–Ω–∞–Ω", "–ê–ø–µ–ª—å—Å–∏–Ω"]

// üîπ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ (unshift):

fruits.unshift("–ö–ª—É–±–Ω–∏–∫–∞");
console.log(fruits); // ["–ö–ª—É–±–Ω–∏–∫–∞", "–Ø–±–ª–æ–∫–æ", "–ë–∞–Ω–∞–Ω", "–ê–ø–µ–ª—å—Å–∏–Ω"]

// üîπ –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –Ω–∞—á–∞–ª–∞ (shift)

fruits.shift();
console.log(fruits); // ["–Ø–±–ª–æ–∫–æ", "–ë–∞–Ω–∞–Ω", "–ê–ø–µ–ª—å—Å–∏–Ω"]



// 4Ô∏è‚É£ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–∞—Å—Å–∏–≤–æ–≤
// JavaScript –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∞—Å—Å–∏–≤–∞–º–∏:

// length ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–ª–∏–Ω—É –º–∞—Å—Å–∏–≤–∞:

console.log(fruits.length); // 3

// indexOf(value) ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞:

console.log(fruits.indexOf("–ë–∞–Ω–∞–Ω")); // 1

// includes(value) ‚Äì –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤–µ:

console.log(fruits.includes("–ì—Ä—É—à–∞")); // false

// slice(start, end) ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥–º–∞—Å—Å–∏–≤ (–Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª!):

let citrus = fruits.slice(1, 3); 
console.log(citrus); // ["–ë–∞–Ω–∞–Ω", "–ê–ø–µ–ª—å—Å–∏–Ω"]

// splice(start, count, newValues...) ‚Äì –∏–∑–º–µ–Ω—è–µ—Ç –º–∞—Å—Å–∏–≤ (—É–¥–∞–ª—è–µ—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã):

fruits.splice(1, 1, "–ö–∏–≤–∏", "–ú–∞–Ω–≥–æ");
console.log(fruits); // ["–Ø–±–ª–æ–∫–æ", "–ö–∏–≤–∏", "–ú–∞–Ω–≥–æ", "–ê–ø–µ–ª—å—Å–∏–Ω"]





// 5Ô∏è‚É£ –ü–µ—Ä–µ–±–æ—Ä –º–∞—Å—Å–∏–≤–∞
// –ß–∞—Å—Ç–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –º–∞—Å—Å–∏–≤–∞. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:

// ‚úÖ –¶–∏–∫–ª for

for (let i = 0; i < fruits.length; i++) {
    console.log(fruits[i]);
}

// ‚úÖ –¶–∏–∫–ª for...of (–±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∏–π —Å–ø–æ—Å–æ–±)

for (let fruit of fruits) {
    console.log(fruit);
}

// ‚úÖ –ú–µ—Ç–æ–¥ forEach

fruits.forEach((fruit, index) => {
    console.log(`${index}: ${fruit}`);
});





// 6Ô∏è‚É£ –†–∞–±–æ—Ç–∞ —Å –º–Ω–æ–≥–æ–º–µ—Ä–Ω—ã–º–∏ –º–∞—Å—Å–∏–≤–∞–º–∏
// –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –º–∞—Å—Å–∏–≤ –≤–Ω—É—Ç—Ä–∏ –º–∞—Å—Å–∏–≤–∞:

let matrix = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
];

console.log(matrix[1][2]); // 6






// –ú–µ—Ç–æ–¥ map ‚Äî —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –º–∞—Å—Å–∏–≤–∞, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –≤—ã–ø–æ–ª–Ω—è—è —É–∫–∞–∑–∞–Ω–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –Ω–∞–¥ –∫–∞–∂–¥—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞.

// üìå –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –º–µ—Ç–æ–¥–∞ map:

// –ù–µ –∏–∑–º–µ–Ω—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤, –∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π.
// –ò—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞.
// –í—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –ø–µ—Ä–µ–¥–∞—ë—à—å –≤–Ω—É—Ç—Ä—å.


// üîπ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç map?
// –°–∏–Ω—Ç–∞–∫—Å–∏—Å:

let –Ω–æ–≤—ã–π_–º–∞—Å—Å–∏–≤ = —Å—Ç–∞—Ä—ã–π_–º–∞—Å—Å–∏–≤.map(—ç–ª–µ–º–µ–Ω—Ç => –æ–ø–µ—Ä–∞—Ü–∏—è);

// –∏–ª–∏

let –Ω–æ–≤—ã–π_–º–∞—Å—Å–∏–≤ = —Å—Ç–∞—Ä—ã–π_–º–∞—Å—Å–∏–≤.map(function(—ç–ª–µ–º–µ–Ω—Ç, –∏–Ω–¥–µ–∫—Å, –º–∞—Å—Å–∏–≤) {
    return –æ–ø–µ—Ä–∞—Ü–∏—è;
});


// üìå –û–±—ä—è—Å–Ω–µ–Ω–∏–µ:

// —ç–ª–µ–º–µ–Ω—Ç ‚Äì —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.
// –∏–Ω–¥–µ–∫—Å (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π) ‚Äì –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞.
// –º–∞—Å—Å–∏–≤ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π) ‚Äì —Å–∞–º –º–∞—Å—Å–∏–≤, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –∏–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞.





// ‚úÖ –ü—Ä–∏–º–µ—Ä 1: –£–º–Ω–æ–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞

let numbers = [1, 2, 3, 4, 5];

let doubled = numbers.map(num => num * 2);

console.log(doubled); // [2, 4, 6, 8, 10]

// –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤ numbers –æ—Å—Ç–∞–ª—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º, –Ω–æ map –≤–µ—Ä–Ω—É–ª –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ doubled.





// ‚úÖ –ü—Ä–∏–º–µ—Ä 2: –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫

let names = ["–∞–ª–µ–∫—Å", "–º–∞—Ä–∏—è", "—Ä–æ–º–∞–Ω"];

let capitalizedNames = names.map(name => name.toUpperCase());

console.log(capitalizedNames); // ["–ê–õ–ï–ö–°", "–ú–ê–†–ò–Ø", "–†–û–ú–ê–ù"]

// üìå –ó–¥–µ—Å—å map –ø—Ä–æ—à—ë–ª—Å—è –ø–æ –∫–∞–∂–¥–æ–º—É –∏–º–µ–Ω–∏ –∏ —Å–¥–µ–ª–∞–ª –µ–≥–æ –∑–∞–≥–ª–∞–≤–Ω—ã–º.





// ‚úÖ –ü—Ä–∏–º–µ—Ä 3: –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤

let users = [
    { name: "–ê–ª–µ–∫—Å", age: 25 },
    { name: "–ú–∞—Ä–∏—è", age: 30 },
    { name: "–†–æ–º–∞–Ω", age: 35 }
];

let namesArray = users.map(user => user.name);

console.log(namesArray); // ["–ê–ª–µ–∫—Å", "–ú–∞—Ä–∏—è", "–†–æ–º–∞–Ω"]

// üìå –ü–æ–ª—É—á–∏–ª–∏ –º–∞—Å—Å–∏–≤ —Ç–æ–ª—å–∫–æ —Å –∏–º–µ–Ω–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.





// ‚úÖ –ü—Ä–∏–º–µ—Ä 4: map + index (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω–¥–µ–∫—Å)

let numbers = [10, 20, 30, 40];

let indexedNumbers = numbers.map((num, index) => `${index}: ${num}`);

console.log(indexedNumbers);
// ["0: 10", "1: 20", "2: 30", "3: 40"]

// üìå –í map –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏ –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.





// ‚úÖ –ü—Ä–∏–º–µ—Ä 5: –£—Å–ª–æ–≤–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π
// –î–æ–ø—É—Å—Ç–∏–º, –º—ã —Ö–æ—Ç–∏–º –∑–∞–º–µ–Ω–∏—Ç—å –≤—Å–µ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –Ω–∞ "—á–µ—Ç–Ω–æ–µ", –∞ –Ω–µ—á–µ—Ç–Ω—ã–µ –æ—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π:


let numbers = [1, 2, 3, 4, 5];

let modifiedNumbers = numbers.map(num => num % 2 === 0 ? "—á–µ—Ç–Ω–æ–µ" : num);

console.log(modifiedNumbers);
// [1, "—á–µ—Ç–Ω–æ–µ", 3, "—á–µ—Ç–Ω–æ–µ", 5]

// üìå –ï—Å–ª–∏ —á–∏—Å–ª–æ —á–µ—Ç–Ω–æ–µ ‚Äî –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ —Å—Ç—Ä–æ–∫—É "—á–µ—Ç–Ω–æ–µ", –∏–Ω–∞—á–µ –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å.

// üî• –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å map?
// –ò—Å–ø–æ–ª—å–∑—É–π map, –µ—Å–ª–∏: ‚úÖ –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ.
// ‚úÖ –ù—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–∏—Å–ª–∞, —Å—Ç—Ä–æ–∫–∏, –æ–±—ä–µ–∫—Ç—ã).
// ‚úÖ –ù—É–∂–Ω–æ –∏–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –∏–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π).

// ‚ùå –ö–æ–≥–¥–∞ map –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ?
// –ï—Å–ª–∏ –Ω–µ –Ω—É–∂–µ–Ω –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –∞ –ø—Ä–æ—Å—Ç–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π forEach.

let numbers = [1, 2, 3, 4];
numbers.forEach(num => console.log(num * 2)); // –í—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å, –Ω–æ –Ω–µ —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤

// –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Å–∞–º –º–∞—Å—Å–∏–≤, –∞ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–æ–≤—ã–π ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π for –∏–ª–∏ forEach.








// üî• –ß—Ç–æ —Ç–∞–∫–æ–µ filter –≤ JavaScript?
// –ú–µ—Ç–æ–¥ filter –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–æ–ª—å–∫–æ —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —É—Å–ª–æ–≤–∏—é.

// üìå –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç filter:

// –ù–µ –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤.
// –ü—Ä–∏–º–µ–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞.
// –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —É—Å–ª–æ–≤–∏—é ‚Äì –æ–Ω –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤.
// –ï—Å–ª–∏ –Ω–µ—Ç ‚Äì —ç–ª–µ–º–µ–Ω—Ç –æ—Ç–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è.

// üîπ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å filter?
// –°–∏–Ω—Ç–∞–∫—Å–∏—Å:

let –Ω–æ–≤—ã–π_–º–∞—Å—Å–∏–≤ = —Å—Ç–∞—Ä—ã–π_–º–∞—Å—Å–∏–≤.filter(—ç–ª–µ–º–µ–Ω—Ç => —É—Å–ª–æ–≤–∏–µ);

// –∏–ª–∏

let –Ω–æ–≤—ã–π_–º–∞—Å—Å–∏–≤ = —Å—Ç–∞—Ä—ã–π_–º–∞—Å—Å–∏–≤.filter(function(—ç–ª–µ–º–µ–Ω—Ç, –∏–Ω–¥–µ–∫—Å, –º–∞—Å—Å–∏–≤) {
    return —É—Å–ª–æ–≤–∏–µ;
});

// üìå –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:

// —ç–ª–µ–º–µ–Ω—Ç ‚Äì —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.
// –∏–Ω–¥–µ–∫—Å (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π) ‚Äì –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞.
// –º–∞—Å—Å–∏–≤ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π) ‚Äì —Å–∞–º –º–∞—Å—Å–∏–≤.





// ‚úÖ –ü—Ä–∏–º–µ—Ä 1: –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞

let numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

let evenNumbers = numbers.filter(num => num % 2 === 0);

console.log(evenNumbers); // [2, 4, 6, 8, 10]

// üìå –ú–µ—Ç–æ–¥ filter –æ—Å—Ç–∞–≤–∏–ª —Ç–æ–ª—å–∫–æ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞.





// ‚úÖ –ü—Ä–∏–º–µ—Ä 2: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤
// –î–æ–ø—É—Å—Ç–∏–º, —É –Ω–∞—Å –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∏ –º—ã —Ö–æ—Ç–∏–º –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏—Ö:

let users = [
    { name: "–ê–ª–µ–∫—Å", age: 17 },
    { name: "–ú–∞—Ä–∏—è", age: 25 },
    { name: "–†–æ–º–∞–Ω", age: 30 },
    { name: "–ò–≥–æ—Ä—å", age: 15 }
];

let adults = users.filter(user => user.age >= 18);

console.log(adults);
// [
//     { name: "–ú–∞—Ä–∏—è", age: 25 },
//     { name: "–†–æ–º–∞–Ω", age: 30 }
// ]

// üìå –ú–µ—Ç–æ–¥ filter —É–±—Ä–∞–ª –≤—Å–µ—Ö, –∫—Ç–æ –º–ª–∞–¥—à–µ 18 –ª–µ—Ç.





// ‚úÖ –ü—Ä–∏–º–µ—Ä 3: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å—Ç—Ä–æ–∫
// –î–æ–ø—É—Å—Ç–∏–º, —É –Ω–∞—Å –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤, –∏ –º—ã —Ö–æ—Ç–∏–º –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å "S":

let products = ["Samsung", "Apple", "Sony", "Xiaomi", "Siemens"];

let filteredProducts = products.filter(product => product.startsWith("S"));

console.log(filteredProducts); // ["Samsung", "Sony", "Siemens"]

// üìå –û—Å—Ç–∞–≤–∏–ª–∏ —Ç–æ–ª—å–∫–æ —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –Ω–∞ "S".

// ‚úÖ –ü—Ä–∏–º–µ—Ä 4: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞ –ø–æ –∏–Ω–¥–µ–∫—Å—É
// –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —á—ë—Ç–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏—è—Ö:

let numbers = [10, 20, 30, 40, 50, 60];

let evenIndexNumbers = numbers.filter((num, index) => index % 2 === 0);

console.log(evenIndexNumbers); // [10, 30, 50]

// üìå –í–∑—è–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã, —Å—Ç–æ—è—â–∏–µ –Ω–∞ 0, 2, 4 –ø–æ–∑–∏—Ü–∏—è—Ö.





// ‚úÖ –ü—Ä–∏–º–µ—Ä 5: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–ª–∏–Ω–µ —Å—Ç—Ä–æ–∫–∏
// –î–æ–ø—É—Å—Ç–∏–º, –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ –∏–º—ë–Ω, –∏ –Ω–∞–º –Ω—É–∂–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª–∏–Ω–Ω—ã–µ –∏–º–µ–Ω–∞ (–±–æ–ª—å—à–µ 5 —Å–∏–º–≤–æ–ª–æ–≤):

let names = ["–ò–≤–∞–Ω", "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä", "–û–ª—å–≥–∞", "–ú–∞—Ä–∏—è", "–ü–µ—Ç—Ä"];

let longNames = names.filter(name => name.length > 5);

console.log(longNames); // ["–ê–ª–µ–∫—Å–∞–Ω–¥—Ä", "–ú–∞—Ä–∏—è"]

// üìå –û—Å—Ç–∞–≤–∏–ª–∏ —Ç–æ–ª—å–∫–æ –¥–ª–∏–Ω–Ω—ã–µ –∏–º–µ–Ω–∞.

// üî• –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å filter?
// –ò—Å–ø–æ–ª—å–∑—É–π filter, –µ—Å–ª–∏: ‚úÖ –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –æ—Å—Ç–∞–≤–∏–≤ —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã.
// ‚úÖ –ù—É–∂–Ω–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã –ø–æ –∫–∞–∫–æ–º—É-—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—É.
// ‚úÖ –ù—É–∂–Ω–æ –æ—Ç—Å–µ–∏–≤–∞—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.

// ‚ùå –ö–æ–≥–¥–∞ filter –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ?
// –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã, –∞ –Ω–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π map.
// –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –º–∞—Å—Å–∏–≤—É, –Ω–æ –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–π ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π forEach.











// üî• –ú–µ—Ç–æ–¥ sort() ‚Äì —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ –≤ JavaScript
// –ú–µ—Ç–æ–¥ sort() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞.

// üìå –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç sort()?

// –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏ (–ø–æ Unicode), –¥–∞–∂–µ —á–∏—Å–ª–∞!
// –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∏–ª–∏ —É–±—ã–≤–∞–Ω–∏—é.
// ‚úÖ –ü—Ä–æ—Å—Ç–µ–π—à–∏–π –ø—Ä–∏–º–µ—Ä

let arr = [4, 15, 2, 9, 23];

arr.sort();
console.log(arr); // [15, 2, 23, 4, 9] ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û!

// üìå –ü–æ—á–µ–º—É –Ω–µ —Ç–∞–∫, –∫–∞–∫ –æ–∂–∏–¥–∞–µ—à—å? –ú–µ—Ç–æ–¥ sort() —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏, —Ç–æ –µ—Å—Ç—å:

// "15" < "2" (–ø–æ—Ç–æ–º—É —á—Ç–æ "1" –∏–¥–µ—Ç –ø–µ—Ä–µ–¥ "2" –≤ –∫–æ–¥–∏—Ä–æ–≤–∫–µ Unicode).
// –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–∞–µ—Ç—Å—è —Å—Ç—Ä–∞–Ω–Ω—ã–º.





// ‚úÖ –ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å–ª–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é?
// –ò—Å–ø–æ–ª—å–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:

let numbers = [4, 15, 2, 9, 23];

numbers.sort((a, b) => a - b);
console.log(numbers); // [2, 4, 9, 15, 23] ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û!

// üìå –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?

// –ï—Å–ª–∏ a - b –º–µ–Ω—å—à–µ 0 ‚Üí a –±—É–¥–µ—Ç —Ä–∞–Ω—å—à–µ b.
// –ï—Å–ª–∏ a - b –±–æ–ª—å—à–µ 0 ‚Üí b –±—É–¥–µ—Ç —Ä–∞–Ω—å—à–µ a.
// –ï—Å–ª–∏ a - b —Ä–∞–≤–Ω–æ 0 ‚Üí –ø–æ—Ä—è–¥–æ–∫ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è.





// ‚úÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
// –ü—Ä–æ—Å—Ç–æ –º–µ–Ω—è–µ–º a - b –Ω–∞ b - a:

let numbers = [4, 15, 2, 9, 23];

numbers.sort((a, b) => b - a);
console.log(numbers); // [23, 15, 9, 4, 2]





// ‚úÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç—Ä–æ–∫
// –†–∞–±–æ—Ç–∞–µ—Ç –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É:

let fruits = ["–Ø–±–ª–æ–∫–æ", "–ê–ø–µ–ª—å—Å–∏–Ω", "–ì—Ä—É—à–∞", "–ú–∞–Ω–≥–æ"];

fruits.sort();
console.log(fruits); // ["–ê–ø–µ–ª—å—Å–∏–Ω", "–ì—Ä—É—à–∞", "–ú–∞–Ω–≥–æ", "–Ø–±–ª–æ–∫–æ"]

// üìå –†—É—Å—Å–∫–∏–µ –±—É–∫–≤—ã —Å–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –Ω–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ ‚Äì –æ–Ω–∏ –∏–¥—É—Ç –ø–µ—Ä–≤—ã–º–∏!





// ‚úÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å —É—á—ë—Ç–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞ (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–±)
// –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä, –∏—Å–ø–æ–ª—å–∑—É–π localeCompare():


let words = ["Banana", "apple", "cherry", "Grape"];

words.sort((a, b) => a.localeCompare(b));
console.log(words); // ["apple", "Banana", "cherry", "Grape"]

// üìå localeCompare() —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–æ–≤.

// ‚úÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤
// –î–æ–ø—É—Å—Ç–∏–º, —É –Ω–∞—Å –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∏ –º—ã —Ö–æ—Ç–∏–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É:

let users = [
    { name: "–ê–ª–µ–∫—Å", age: 25 },
    { name: "–ú–∞—Ä–∏—è", age: 19 },
    { name: "–†–æ–º–∞–Ω", age: 30 },
    { name: "–ò–≥–æ—Ä—å", age: 22 }
];

users.sort((a, b) => a.age - b.age);

console.log(users);
// [
//     { name: "–ú–∞—Ä–∏—è", age: 19 },
//     { name: "–ò–≥–æ—Ä—å", age: 22 },
//     { name: "–ê–ª–µ–∫—Å", age: 25 },
//     { name: "–†–æ–º–∞–Ω", age: 30 }
// ]

// üìå –¢–µ–ø–µ—Ä—å —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É.






// ‚úÖ –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ (shuffle)
// –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–µ—Ä–µ–º–µ—à–∞—Ç—å –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å sort() —Å Math.random():

let numbers = [1, 2, 3, 4, 5];

numbers.sort(() => Math.random() - 0.5);
console.log(numbers); // –ù–∞–ø—Ä–∏–º–µ—Ä: [4, 1, 3, 5, 2]

// üìå Math.random() - 0.5 —Å–æ–∑–¥–∞—ë—Ç —Å–ª—É—á–∞–π–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

// üî• –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å sort()?
// ‚úÖ –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å–ª–∞, —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –æ–±—ä–µ–∫—Ç—ã.
// ‚úÖ –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–ø–æ —É–±—ã–≤–∞–Ω–∏—é, –∞–ª—Ñ–∞–≤–∏—Ç—É, –¥–∞—Ç–µ –∏ —Ç. –¥.).
// ‚úÖ –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–º–µ—à–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º.






